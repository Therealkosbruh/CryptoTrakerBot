import * as dotenv from "dotenv";
import TelegramBot, { Message } from "node-telegram-bot-api";
import { handleUserStart } from "./constollers/userController";

dotenv.config();

const token = process.env.BOT_TOKEN; 

if (!token) {
  console.error("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!");
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });


const createMenu = () => {
  return {
    reply_markup: {
      keyboard: [
        [{ text: "üßë –ü—Ä–æ—Ñ–∏–ª—å" }, { text: "üìä –ü–æ–¥–ø–∏—Å–∫–∏" }],
        [{ text: "üóí –ö–æ–º–∞–Ω–¥—ã" }, { text: "‚ùóÔ∏èInfo" }],
      ],
      resize_keyboard: true,
      one_time_keyboard: false,
    },
  };
};

bot.onText(/\/start/, async (msg: Message) => {
  const chatId = msg.chat.id;
  const userId = msg.from?.id.toString() || ""; 
  const userNickname = msg.from?.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

  await handleUserStart(userId, chatId.toString(), userNickname);

  const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, ${userNickname}! üëã\n–Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç. üöÄ\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∫—É—Ä—Å–∞–º–∏, –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —Ü–µ–Ω –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–æ–±–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã. –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è –º–æ–Ω–µ—Ç—É, –∏ —è –ø–æ–∫–∞–∂—É –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ! üìà –î–ª—è –∏–∑—É—á–µ–Ω–∏—è –º–æ–µ–π —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª "Info".`;
  bot.sendMessage(chatId, welcomeMessage, createMenu());
});
